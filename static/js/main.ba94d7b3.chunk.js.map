{"version":3,"sources":["components/SortingVisualizer.jsx","App.js","index.js"],"names":["genRandomNumbers","min","max","number","Math","floor","random","sleep","ms","Promise","resolve","setTimeout","SortingVisualizer","red","green","yellow","purple","blue","setWidth","window","innerWidth","width","useState","upperLimit","SortAlgo","setSortAlgo","isSorting","setIsSorting","flag","setFlag","array","setArray","colorArray","setColorArray","isSorted","setIsSorted","resetArray","temp","tempColor","i","push","BubbleSort","A","a","length","j","handle2ColorChangeQS","swapEle","handleColorChangeQS","InsertionSort","key","k","QuickSort","start","end","partition","index","pivot","pIndex","ele1","ele2","arr","index1","index2","Color","SelectionSort","n","tempIdx","min_idx","CockTailSort","swapped","useEffect","class","href","style","fontFamily","fontWeight","className","onClick","alert","map","value","height","backgroundColor","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ba94d7b3.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"../styles.css\";\n\nfunction SortingVisualizer() {\n  const red = \"rgba(219, 57, 57, 0.8)\";\n  const green = \"rgba(78, 216, 96, 0.8)\";\n  const yellow = \"rgba(237,234,59,0.8)\";\n  const purple = \"rgba(169, 92, 232, 0.8)\";\n  const blue = \"rgba(66, 134, 244, 0.8)\";\n  let screenWidth = window.innerWidth;\n  let setWidth = 0;\n  if (screenWidth < 420) {\n    setWidth = 200;\n  } else {\n    setWidth = 300;\n  }\n  const [upperLimit, setUpperLimit] = useState(setWidth);\n  const [SortAlgo, setSortAlgo] = useState(null);\n  const [isSorting, setIsSorting] = useState(false);\n  const [flag, setFlag] = useState(0);\n  var width;\n  if (upperLimit <= 100) {\n    width = 1;\n  } else if (upperLimit > 100 && upperLimit <= 200) {\n    width = 1;\n  } else {\n    width = 2;\n  }\n\n  const [array, setArray] = useState([]);\n  const [colorArray, setColorArray] = useState([]);\n  const [isSorted, setIsSorted] = useState(false);\n  useEffect(() => {\n    resetArray();\n  }, []);\n\n  function resetArray() {\n    const temp = [];\n    const tempColor = [];\n    for (let i = 0; i < upperLimit; i++) {\n      temp.push(genRandomNumbers(5, 500));\n      tempColor.push(blue);\n    }\n    setArray([...temp]);\n    setColorArray([...tempColor]);\n    setFlag(0);\n    setIsSorted(false);\n    setIsSorting(false);\n  }\n  async function BubbleSort(A) {\n    for (let i = 0; i < A.length - 2; i++) {\n      for (let j = 0; j < A.length - i - 1; j++) {\n        await handle2ColorChangeQS(colorArray, j, j + 1, red);\n        if (A[j] > A[j + 1]) {\n          [A[j], A[j + 1]] = await swapEle(A[j], A[j + 1]);\n          await handle2ColorChangeQS(colorArray, j, j + 1, green);\n          await sleep(0);\n          handle2ColorChangeQS(colorArray, j, j + 1, blue);\n        } else handle2ColorChangeQS(colorArray, j, j + 1, blue);\n      }\n      handleColorChangeQS(colorArray, A.length - i - 1, purple);\n    }\n    for (let i = 0; i < A.length; i++) {\n      handleColorChangeQS(colorArray, i, green);\n    }\n    await sleep(500);\n    for (let i = 0; i < A.length; i++) {\n      handleColorChangeQS(colorArray, i, purple);\n    }\n    setArray([...A]);\n    setIsSorted(true);\n  }\n  async function InsertionSort(A) {\n    for (let i = 1; i < A.length; ++i) {\n      let key = A[i];\n      let j = i - 1;\n      await handleColorChangeQS(colorArray, i, yellow);\n      while (j >= 0 && A[j] > key) {\n        handleColorChangeQS(colorArray, j, red);\n        A[j + 1] = A[j];\n        await sleep(1);\n        handleColorChangeQS(colorArray, j, blue);\n        j = j - 1;\n      }\n      A[j + 1] = key;\n      await sleep(1);\n      for (let k = 0; k <= i; k++) handleColorChangeQS(colorArray, k, purple);\n    }\n    for (let i = 0; i < A.length; i++) {\n      handleColorChangeQS(colorArray, i, green);\n    }\n    await sleep(500);\n    for (let i = 0; i < A.length; i++) {\n      handleColorChangeQS(colorArray, i, purple);\n    }\n    setArray([...A]);\n    setIsSorted(true);\n  }\n  async function QuickSort(A, start, end) {\n    if (start >= end) {\n      return;\n    }\n    let index = await partition(A, start, end);\n    handleColorChangeQS(colorArray, index, yellow);\n    await QuickSort(A, start, index - 1);\n    await QuickSort(A, index + 1, end);\n    handleColorChangeQS(colorArray, index, purple);\n    handle2ColorChangeQS(colorArray, start, end, purple);\n  }\n  async function partition(A, start, end) {\n    let pivot = A[end];\n    let pIndex = start;\n    for (let i = start; i < end; i++) {\n      await handle2ColorChangeQS(colorArray, i, end, red);\n      if (A[i] <= pivot) {\n        [A[i], A[pIndex]] = await swapEle(A[i], A[pIndex]);\n        handle2ColorChangeQS(colorArray, i, pIndex, green);\n        handle2ColorChangeQS(colorArray, i, pIndex, blue);\n        pIndex++;\n      }\n      handleColorChangeQS(colorArray, i, blue);\n    }\n    [A[pIndex], A[end]] = await swapEle(A[pIndex], A[end]);\n    handle2ColorChangeQS(colorArray, pIndex, end, green);\n    handle2ColorChangeQS(colorArray, pIndex, end, blue);\n    return pIndex;\n  }\n  async function swapEle(ele1, ele2) {\n    ele1 = ele1 + ele2;\n    ele2 = ele1 - ele2;\n    ele1 = ele1 - ele2;\n    return [ele1, ele2];\n  }\n  async function handle2ColorChangeQS(arr, index1, index2, Color) {\n    arr[index1] = Color;\n    arr[index2] = Color;\n    setColorArray([...arr]);\n    await sleep(0);\n  }\n  async function handleColorChangeQS(arr, index, Color) {\n    arr[index] = Color;\n    setColorArray([...arr]);\n    await sleep(0);\n  }\n  async function SelectionSort(A) {\n    let n = A.length;\n    let tempIdx = 0;\n    for (let i = 0; i < n - 1; i++) {\n      let min_idx = i;\n      for (let j = i + 1; j < n; j++) {\n        await handleColorChangeQS(colorArray, j, red);\n        if (A[j] < A[min_idx]) {\n          min_idx = j;\n          await sleep(1);\n        }\n        handleColorChangeQS(colorArray, j, blue);\n        if (tempIdx !== min_idx) {\n          handleColorChangeQS(colorArray, tempIdx, blue);\n          tempIdx = min_idx;\n          await sleep(1);\n          handleColorChangeQS(colorArray, min_idx, \"rgba(255,167,25,0.8)\");\n        }\n      }\n      handle2ColorChangeQS(colorArray, min_idx, i, red);\n      await sleep(10);\n      [A[min_idx], A[i]] = await swapEle(A[min_idx], A[i]);\n      await sleep(0);\n      handle2ColorChangeQS(colorArray, min_idx, i, green);\n      await sleep(10);\n      await handleColorChangeQS(colorArray, i, purple);\n      for (let k = 0; k <= i; k++) {\n        handleColorChangeQS(colorArray, k, purple);\n      }\n    }\n    for (let i = 0; i < A.length; i++) {\n      handleColorChangeQS(colorArray, i, green);\n    }\n    await sleep(500);\n    for (let i = 0; i < A.length; i++) {\n      handleColorChangeQS(colorArray, i, purple);\n    }\n    setArray([...A]);\n    setIsSorted(true);\n  }\n  async function CockTailSort(A) {\n    let swapped = true;\n    let start = 0;\n    let end = A.length;\n    while (swapped === true) {\n      swapped = false;\n      for (let i = start; i < end - 1; ++i) {\n        await handle2ColorChangeQS(colorArray, i, i + 1, red);\n        if (A[i] > A[i + 1]) {\n          [A[i], A[i + 1]] = await swapEle(A[i], A[i + 1]);\n          await handle2ColorChangeQS(colorArray, i, i + 1, green);\n          await sleep(0);\n          handle2ColorChangeQS(colorArray, i, i + 1, blue);\n          swapped = true;\n        } else if (swapped === false) {\n          handle2ColorChangeQS(colorArray, i, i + 1, purple);\n        } else {\n          handle2ColorChangeQS(colorArray, i, i + 1, blue);\n        }\n      }\n      await handleColorChangeQS(colorArray, end - 1, purple);\n      if (swapped === false) break;\n      swapped = false;\n      end = end - 1;\n      for (let i = end - 1; i >= start; i--) {\n        await handle2ColorChangeQS(colorArray, i, i + 1, red);\n        if (A[i] > A[i + 1]) {\n          [A[i], A[i + 1]] = await swapEle(A[i], A[i + 1]);\n          await handle2ColorChangeQS(colorArray, i, i + 1, green);\n          await sleep(0);\n          handle2ColorChangeQS(colorArray, i, i + 1, blue);\n          swapped = true;\n        } else if (i === end - 1) {\n          handleColorChangeQS(colorArray, i, blue);\n          handleColorChangeQS(colorArray, i + 1, purple);\n        } else if (swapped === false) {\n          handle2ColorChangeQS(colorArray, i, i + 1, purple);\n        } else {\n          handle2ColorChangeQS(colorArray, i, i + 1, blue);\n        }\n        handleColorChangeQS(colorArray, i, purple);\n      }\n      start = start + 1;\n    }\n    for (let i = 0; i < A.length; i++) {\n      handleColorChangeQS(colorArray, i, green);\n    }\n    await sleep(500);\n    for (let i = 0; i < A.length; i++) {\n      handleColorChangeQS(colorArray, i, purple);\n    }\n    setArray([...A]);\n    setIsSorted(true);\n  }\n\n  return (\n    <div class=\"everything\">\n      <nav class=\"navbar navbar-dark bg-dark\">\n        <a class=\"navbar-brand\" href=\"#\">\n          <span\n            style={{ fontFamily: \"Merriweather, serif\", fontWeight: \"700\" }}\n          >\n            Sorting Visualizer\n          </span>\n        </a>\n        <div className=\"btn-container\">\n          <button\n            className=\"btn btn-sm btn-warning\"\n            onClick={() => {\n              if (!isSorting) resetArray();\n              else {\n                alert(\"Array is being sorted.\");\n              }\n            }}\n          >\n            Generate New Array\n          </button>\n          <button\n            className=\"btn btn-sm btn-warning bubble\"\n            onClick={() => {\n              if (!isSorted && !isSorting) {\n                setSortAlgo(\"bubble\");\n              }\n              const temp = flag + 1;\n              setFlag(temp);\n            }}\n          >\n            Bubble Sort\n          </button>\n          <button\n            className=\"btn btn-sm btn-warning insert\"\n            onClick={() => {\n              if (!isSorted && !isSorting) {\n                setSortAlgo(\"insert\");\n              }\n              const temp = flag + 1;\n              setFlag(temp);\n            }}\n          >\n            Insertion Sort\n          </button>\n          <button\n            className=\"btn btn-sm btn-warning quick\"\n            onClick={() => {\n              if (!isSorted && !isSorting) {\n                setSortAlgo(\"quick\");\n              }\n              const temp = flag + 1;\n              setFlag(temp);\n            }}\n          >\n            Quick Sort\n          </button>\n          <button\n            className=\"btn btn-sm btn-warning cocktail\"\n            onClick={() => {\n              if (!isSorted) setSortAlgo(\"cocktail\");\n              const temp = flag + 1;\n              setFlag(temp);\n            }}\n          >\n            Cocktail Sort\n          </button>\n          <button\n            className=\"btn btn-sm btn-warning select\"\n            onClick={() => {\n              if (!isSorted) setSortAlgo(\"select\");\n              const temp = flag + 1;\n              setFlag(temp);\n            }}\n          >\n            Selection Sort\n          </button>\n        </div>\n        <div class=\"sort-btn\">\n          {flag > 0 ? (\n            <button\n              class=\"btn btn-md btn-primary\"\n              onClick={async () => {\n                if (!isSorted && !isSorting) {\n                  setIsSorting(true);\n                  if (SortAlgo === \"bubble\") {\n                    await BubbleSort(array);\n                    setIsSorted(true);\n                  } else if (SortAlgo === \"insert\") {\n                    await InsertionSort(array);\n                    setIsSorted(true);\n                  } else if (SortAlgo === \"quick\") {\n                    await QuickSort(array, 0, array.length - 1);\n                    for (let i = 0; i < array.length; i++) {\n                      handleColorChangeQS(colorArray, i, green);\n                    }\n                    await sleep(500);\n                    for (let i = 0; i < array.length; i++) {\n                      handleColorChangeQS(colorArray, i, purple);\n                    }\n                    setIsSorted(true);\n                  } else if (SortAlgo === \"cocktail\") {\n                    await CockTailSort(array);\n                    setIsSorted(true);\n                  } else if (SortAlgo === \"select\") {\n                    await SelectionSort(array);\n                    setIsSorted(true);\n                  }\n                  setIsSorting(false);\n                } else if (isSorted) {\n                  alert(\"Array is Sorted\");\n                } else if (isSorting) {\n                  alert(\"Array is being sorted.\");\n                }\n              }}\n            >\n              Sort\n            </button>\n          ) : null}\n        </div>\n      </nav>\n\n      <div class=\"container\">\n        <div class=\"row\">\n          <div class=\"col-lg-12\">\n            <div className=\"array-container\">\n              <div className=\"array-container-up\">\n                {array.map(function (value, index) {\n                  return (\n                    <div\n                      className=\"array-bar array-bar-up\"\n                      key={index}\n                      style={{\n                        height: `${value / 2}px`,\n                        width: `${width}px`,\n                        backgroundColor: `${colorArray[index]}`,\n                      }}\n                    ></div>\n                  );\n                })}\n              </div>\n              <div className=\"array-container-down\">\n                {array.map(function (value, index) {\n                  return (\n                    <div\n                      className=\"array-bar array-bar-down\"\n                      key={index}\n                      style={{\n                        height: `${value / 2}px`,\n                        width: `${width}px`,\n                        backgroundColor: `${colorArray[index]}`,\n                      }}\n                    ></div>\n                  );\n                })}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <footer class=\"footer\">\n        <div class=\"container\">\n          <span class=\"text-muted\">&copy; 2020, All Rights Reserved.</span>\n        </div>\n      </footer>\n    </div>\n  );\n}\nfunction genRandomNumbers(min, max) {\n  const number = Math.floor(Math.random() * (max - min + 1) + min);\n  if (number % 2 === 0) return number;\n  else return number - 1;\n}\nfunction sleep(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nexport default SortingVisualizer;\n","import React from \"react\";\nimport SortingVisualizer from \"./components/SortingVisualizer\";\nfunction App() {\n  return <SortingVisualizer />;\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}